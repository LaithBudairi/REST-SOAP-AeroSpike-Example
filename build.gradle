//plugins {
//    id 'org.springframework.boot' version '2.2.2.RELEASE'
//    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
//    id 'java'
//}
//group = 'com.exalt-tech'
//version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '11'
//targetCompatibility = '11'
//
//
//configurations {
//    jaxb
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}
//
//repositories {
//    mavenCentral()
//}
//
//task genJaxb {
//    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
//    ext.classesDir = "${buildDir}/classes/jaxb"
//    ext.schema = "src/main/resources/xsd/transaction.xsd"
//
//    outputs.dir classesDir
//
//    doLast() {
//        project.ant {
//            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
//                    classpath: configurations.jaxb.asPath
//            mkdir(dir: sourcesDir)
//            mkdir(dir: classesDir)
//
//            xjc(destdir: sourcesDir, schema: schema) {
//                arg(value: "-wsdl")
//                produces(dir: sourcesDir, includes: "**/*.java")
//            }
//
//            javac(destdir: classesDir, source: 11, target: 11, debug: true,
//                    debugLevel: "lines,vars,source",
//                    classpath: configurations.jaxb.asPath) {
//                src(path: sourcesDir)
//                include(name: "**/*.java")
//                include(name: "*.java")
//            }
//
//            copy(todir: classesDir) {
//                fileset(dir: sourcesDir, erroronmissingdir: false) {
//                    exclude(name: "**/*.java")
//                }
//            }
//        }
//    }
//}
//
//dependencies {
//    implementation 'com.aerospike:aerospike-client:5.0.0'
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-web-services'
//    compileOnly 'org.projectlombok:lombok'
//    annotationProcessor 'org.projectlombok:lombok'
//    compile("wsdl4j:wsdl4j:1.6.1")
//    jaxb("org.glassfish.jaxb:jaxb-xjc:2.2.11")
//    compile(files(genJaxb.classesDir).builtBy(genJaxb))
//    // for java 11
//    implementation 'org.glassfish.jaxb:jaxb-runtime'
//
//    testImplementation('org.springframework.boot:spring-boot-starter-test') {
//        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
//    }
//}
//test {
//    useJUnitPlatform()
//}





























buildscript {
    ext {
        springBootVersion = '2.3.8.RELEASE'
        springWsCoreVersion = '3.0.9.RELEASE'
    }
    repositories {
//		mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"

        classpath "biz.aQute.bnd:biz.aQute.bnd.gradle:5.1.2"
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'maven-publish'
    id 'application'
    id 'biz.aQute.bnd.builder' version "5.1.2"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: "biz.aQute.bnd.builder"

repositories {
    mavenCentral()
}
sourceCompatibility = 1.8
targetCompatibility = 1.8
sourceSets.main.java.srcDirs "src/generated-sources/java"
sourceSets.main.resources.excludes = ['transaction.xsd']

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
    jaxb
}

dependencies {
//    implementation 'com.aerospike:aerospike-client:5.0.0'
    implementation 'com.aerospike:spring-data-aerospike:2.4.2.RELEASE'
    // tag::dependency[]
    implementation ('org.springframework.boot:spring-boot-starter-web-services') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }

    implementation('org.springframework.boot:spring-boot-starter-web:1.5.9.RELEASE'){
        exclude group: 'org.springframework.boot:spring-boot-starter-tomcat'
    }

    implementation ('org.springframework.boot:spring-boot-starter-actuator:1.5.9.RELEASE'){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation ('org.springframework.boot:spring-boot-starter-jetty:1.5.9.RELEASE')
    implementation 'org.springframework.osgi:spring-osgi-io:1.2.1'
    implementation ('org.springframework.boot:spring-boot-starter'){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    // end::dependency[]
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    compile group: 'org.springframework.ws', name: 'spring-xml', version: '3.0.9.RELEASE'
    // https://mvnrepository.com/artifact/com.sun.xml.messaging.saaj/saaj-impl
    compile group: 'com.sun.xml.messaging.saaj', name: 'saaj-impl', version: '1.5.2'
    // https://mvnrepository.com/artifact/javax.xml.soap/javax.xml.soap-api
    compile group: 'javax.xml.soap', name: 'javax.xml.soap-api', version: '1.3.5'
//	// https://mvnrepository.com/artifact/javax.xml.soap/saaj-api
//	compile group: 'javax.xml.soap', name: 'saaj-api', version: '1.3.5'


    compile group: 'biz.aQute.bnd', name: 'biz.aQute.bnd.gradle', version: '5.1.2'
    compileOnly 'org.osgi:org.osgi.core:5.0.0'

//	compile"org.springframework.ws:spring-xml:${springWsCoreVersion}"

    implementation('org.jvnet.mimepull:mimepull:1.9.11')
    implementation("wsdl4j:wsdl4j:1.6.3")
    jaxb (
            'com.sun.xml.bind:jaxb-xjc:2.2.7',
            'com.sun.xml.bind:jaxb-impl:2.2.7'
    )

    implementation('com.sun.xml.messaging.saaj:saaj-impl:1.5.1')
}
task jaxb {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/generated-sources/java")
    doLast {
        jaxbTargetDir.mkdirs()
        ant.taskdef(
                name: 'xjc',
                classname: 'com.sun.tools.xjc.XJCTask',
                classpath: configurations.jaxb.asPath
        )
        ant.jaxbTargetDir = jaxbTargetDir
        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'com.roytuts.jaxb',
                schema: 'src/main/resources/xsd/transaction.xsd'
        )
    }
}
compileJava.dependsOn jaxb